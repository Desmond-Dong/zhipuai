{
  "title": "Zhipu AI",
  "config": {
    "step": {
      "user": {
        "data": {
          "name": "custom name",
          "api_key": "API key"
        },
        "description": "Get the key: [Click the link](https://www.bigmodel.cn/invite?icode=9niOGcfvBKiiCpCLI4tgtX3uFJ1nZ0jLLgipQkYjpcA%3D)"
      },
      "reauth_confirm": {
        "title": "Re-verify Zhipu AI",
        "description": "Your Zhipu AI API key has expired, please enter a new API key",
        "data": {
          "api_key": "API key"
        }
      },
      "reconfigure_confirm": {
        "title": "Reconfigure Zhipu AI",
        "description": "Please enter new configuration information",
        "data": {
          "api_key": "API key"
        }
      },
      "history": {
        "title": "Historical data analysis configuration",
        "description": "Select the entities to be analyzed and the number of days of historical data",
        "data": {
          "history_entities": "Select entity",
          "history_days": "Number of days of historical data (1-15 days)"
        }
      }
    },
    "error": {
      "cannot_connect": "Unable to connect to service",
      "invalid_auth": "API key error",
      "unknown": "unknown error",
      "cooldown_too_small": "The cooling time value {value} is too small, please set a value greater than or equal to 0!",
      "cooldown_too_large": "The cooling time value {value} is too large, please set a value less than or equal to 10!",
      "model_not_found": "The specified model could not be found",
      "invalid_api_key": "API Key format error"
    },
    "abort": {
      "already_configured": "The device has been configured",
      "reauth_successful": "Re-authentication successful",
      "reconfigure_successful": "Reconfiguration successful"
    }
  },
  "options": {
    "step": {
      "init": {
        "data": {
          "chat_model": "chat model",
          "temperature": "temperature",
          "max_tokens": "Maximum number of tiles",
          "max_history_messages": "Maximum number of historical messages",
          "top_p": "Top P",
          "prompt": "prompt word template",
          "max_tool_iterations": "Maximum number of tool iterations",
          "cooldown_period": "Cooling time (seconds)",
          "request_timeout": "Request timeout (seconds)",
          "llm_hass_api": "Home Assistant LLM API",
          "recommended": "Use recommended model settings",
          "web_search": "Internet analytics search",
          "history_analysis": "Entity historical data analysis"
        },
        "data_description": {
          "prompt": "Indicates how LLM should respond. This can be a template.",
          "chat_model": "Please select the chat model you want to use. By default, please select the free universal 128K model. If you want a better experience, you can choose to support other paid models. The actual cost is not high. Please check the official website billing standards for details.",
          "max_tokens": "Set the maximum number of tokens returned in the response",
          "temperature": "Controls the randomness of the output (0-2)",
          "top_p": "Control output diversity (0-1)",
          "llm_hass_api": "Opt-in LLM API",
          "recommended": "Use recommended model settings",
          "max_history_messages": "Set the maximum number of historical messages to be retained. Function: Control the memory function of input content. The memory function can ensure smooth contextual dialogue. Generally, it is best to control home equipment within 5 times. It is effective for requests that cannot be processed smoothly. Other daily conversations can be set. The threshold is above 10 times.",
          "max_tool_iterations": "Set the maximum number of tool calls in a single conversation. Its function is to set the call threshold for system LLM call requests. If an error occurs, it can ensure that the system will not freeze. Especially for the design of various small hosts with weak performance, it is recommended to set 20 -30 times.",
          "cooldown_period": "Set the minimum (0-10 seconds) interval between two conversation requests. The effect: the request will be delayed for a period of time before being sent. It is recommended to set it within 3 seconds to ensure that the content sending request fails due to frequency factors.",
          "request_timeout": "Set the timeout time for AI requests (10-120 seconds). Function: Control the maximum time to wait for AI response. This value may need to be increased when generating longer text. Suggestion: If it is a short quick response conversation, you can set it to about 10 seconds. If an AI error occurs, this value can be increased appropriately. If you need to generate long text of more than 1,000 words, it is recommended to set it to more than 60 seconds."
        }
      },
      "history": {
        "title": "Entity historical data analysis configuration",
        "description": "Provides **entity historical data analysis** in scenarios that cannot be achieved by **Jinja2 template** (Home Assistant's template system) to ensure that AI understands and analyzes your device data. For example: it can be used to automatically help you analyze home security , personnel activity trajectories, daily life summary, UI text template introduction, etc.\n\n• Support **AI-assisted analysis** historical data (let AI understand and analyze your device data)\n• Provide intelligent decision support for **device management**\n• It is recommended to control within the range of **1 day historical data** for best results\n• **Special Reminder**: For environmental sensors that update frequently such as temperature, humidity, and illumination, please avoid selecting Prevent AI Overflow (you can set it according to the default 10 minutes)",
        "data": {
          "history_entities": "Select entity",
          "history_days": "Get the range of days (1-15 days) that the entity has been in the repository",
          "history_interval": "Get the update time (minutes) of the entity in the repository"
        }
      }
    },
    "error": {
      "no_entities": "Please select at least one entity",
      "invalid_days": "The number of historical data days must be between 1-15 days"
    }
  },
  "exceptions": {
    "invalid_config_entry": {
      "message": "The provided configuration entry is invalid. What you get is {config_entry}"
    }
  }
}